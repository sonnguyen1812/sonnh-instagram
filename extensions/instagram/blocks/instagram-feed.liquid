{% # extensions/instagram/blocks/instagram-feed.liquid %}

<div id="instagram-feed-container" class="instagram-feed">
  {% assign feed_config = shop.metafields.instagramfeed.feed_config.value %}
  {% assign media_list = shop.metafields.instagramfeed.media_list.value %}

  {% if feed_config %}
    <div class="instagram-feed__header">
      <h2>{{ feed_config.title }}</h2>
      
      <div class="instagram-feed__filters">
        <!-- Search box -->
        <div class="instagram-feed__search">
          <input 
            type="text" 
            id="instagram-search" 
            placeholder="Search by caption..."
            class="instagram-feed__search-input"
          >
        </div>

        <!-- Sort options -->
        <select id="instagram-sort" class="instagram-feed__sort">
          <option value="date-desc">Newest first</option>
          <option value="date-asc">Oldest first</option>
          <option value="likes-desc">Most likes</option>
          <option value="likes-asc">Least likes</option>
          <option value="comments-desc">Most comments</option>
          <option value="comments-asc">Least comments</option>
        </select>

        <!-- Date filter -->
        <div class="instagram-feed__date-filter">
          <input 
            type="date" 
            id="instagram-date-from" 
            class="instagram-feed__date-input"
          >
          <span>to</span>
          <input 
            type="date" 
            id="instagram-date-to" 
            class="instagram-feed__date-input"
          >
        </div>
      </div>
    </div>

    {% if feed_config.layout == 2 %}
      {% assign total_items = 5 %}
    {% else %}
      {% assign total_items = feed_config.rows | times: feed_config.columns %}
    {% endif %}

    <div class="instagram-feed__grid {% if feed_config.layout == 2 %}instagram-feed__grid--highlight{% endif %}" style="gap: {{ feed_config.spacing }}px;">
      {% for item in media_list limit: total_items %}
        {% assign is_first = forloop.first %}
        <div class="instagram-feed__item {% if feed_config.layout == 2 and is_first %}instagram-feed__item--highlight{% endif %}" data-item='{{ item | json }}'>
          {% if item.type == 'video' %}
            <div class="instagram-feed__media-wrapper">
              <img
                src="{{ item.posterUrl }}"
                alt="{{ item.caption }}"
                loading="lazy"
                width="600"
                height="600"
                class="instagram-feed__poster">
              <video
                class="instagram-feed__video"
                src="{{ item.videoUrl }}"
                muted
                playsinline
                loop
                preload="none"
                width="600"
                height="600"></video>
              <div class="instagram-feed__video-indicator">Video</div>
            </div>
          {% else %}
            <img
              src="{{ item.mediaUrl }}"
              alt="{{ item.caption }}"
              loading="lazy"
              width="600"
              height="600"
              class="instagram-feed__image">
          {% endif %}
          <div class="instagram-feed__overlay">
            <p class="time">{{ item.postDate | date: "%d/%m/%Y" }}</p>
          </div>
        </div>
      {% endfor %}
    </div>
  {% else %}
    <div class="instagram-feed__empty">
      No feed configuration found
    </div>
  {% endif %}
</div>

<div id="instagram-modal" class="instagram-modal">
  <div class="instagram-modal__content">
    <button class="instagram-modal__close">&times;</button>
    <div class="instagram-modal__inner">
      <div class="instagram-modal__media">
        <img 
          id="modal-image" 
          class="instagram-modal__image"
          loading="eager"
        >
        <video 
          id="modal-video" 
          class="instagram-modal__video" 
          playsinline 
          loop
          controls>
        </video>
      </div>
      <div class="instagram-modal__info">
        <div class="instagram-modal__header">
          <i class="fa-brands fa-instagram"></i>
          <span>Instagram</span>
        </div>
        <p id="modal-caption" class="instagram-modal__caption"></p>
        <div class="instagram-modal__stats">
          <span id="modal-likes">‚ù§Ô∏è
            <span></span>
            likes</span>
          <span id="modal-comments">üí¨
            <span></span>
            comments</span>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Cache DOM elements
    const elements = {
      searchInput: document.getElementById('instagram-search'),
      sortSelect: document.getElementById('instagram-sort'),
      dateFrom: document.getElementById('instagram-date-from'),
      dateTo: document.getElementById('instagram-date-to'),
      modal: document.getElementById('instagram-modal'),
      modalImage: document.getElementById('modal-image'),
      modalVideo: document.getElementById('modal-video'),
      modalCaption: document.getElementById('modal-caption'),
      modalLikes: document.getElementById('modal-likes').querySelector('span'),
      modalComments: document.getElementById('modal-comments').querySelector('span'),
      grid: document.querySelector('.instagram-feed__grid')
    };

    // Initialize media list once
    const mediaList = Array.from(document.querySelectorAll('.instagram-feed__item'))
      .map(item => ({
        element: item,
        data: JSON.parse(item.getAttribute('data-item'))
      }));

    // Modal handlers
    const modalHandlers = {
      open: function(data) {
        const { type, videoUrl, mediaUrl, caption, likeCount, commentCount } = data;
        
        elements.modalImage.style.display = 'none';
        elements.modalVideo.style.display = 'none';
        
        if (type === 'video') {
          elements.modalVideo.src = videoUrl;
          elements.modalVideo.style.display = 'block';
          elements.modalVideo.play();
        } else {
          elements.modalImage.src = mediaUrl;
          elements.modalImage.style.display = 'block';
        }
        
        elements.modalCaption.textContent = caption;
        elements.modalLikes.textContent = likeCount.toLocaleString();
        elements.modalComments.textContent = commentCount.toLocaleString();
        elements.modal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
      },
      
      close: function() {
        elements.modal.style.display = 'none';
        elements.modalVideo.pause();
        elements.modalVideo.currentTime = 0;
        document.body.style.overflow = '';
      }
    };

    // Video handlers
    const videoHandlers = {
      play: function(video) {
        video.style.opacity = '1';
        video.play();
      },
      
      stop: function(video, item) {
        video.pause();
        video.currentTime = 0;
        video.style.opacity = '0';
        setTimeout(() => {
          if (!item.matches(':hover')) {
            video.load();
          }
        }, 200);
      }
    };

    // Sort functions map
    const sortFunctions = {
      'date-desc': (a, b) => new Date(b.data.postDate) - new Date(a.data.postDate),
      'date-asc': (a, b) => new Date(a.data.postDate) - new Date(b.data.postDate),
      'likes-desc': (a, b) => b.data.likeCount - a.data.likeCount,
      'likes-asc': (a, b) => a.data.likeCount - b.data.likeCount,
      'comments-desc': (a, b) => b.data.commentCount - a.data.commentCount,
      'comments-asc': (a, b) => a.data.commentCount - b.data.commentCount
    };

    function filterAndSortMedia() {
      const searchTerm = elements.searchInput.value.toLowerCase().trim();
      const fromDate = elements.dateFrom.value ? new Date(elements.dateFrom.value + 'T00:00:00') : null;
      const toDate = elements.dateTo.value ? new Date(elements.dateTo.value + 'T23:59:59') : null;

      const filteredItems = mediaList.filter(item => {
        const caption = item.data.caption?.toLowerCase().trim() || '';
        const postDate = new Date(item.data.postDate);
        
        return (!searchTerm || caption.includes(searchTerm)) &&
               (!fromDate || postDate >= fromDate) &&
               (!toDate || postDate <= toDate);
      });

      filteredItems.sort(sortFunctions[elements.sortSelect.value]);

      // Update visibility
      mediaList.forEach(item => {
        item.element.style.display = filteredItems.includes(item) ? '' : 'none';
      });

      // Reorder elements
      filteredItems.forEach(item => {
        elements.grid.appendChild(item.element);
      });
    }

    // Event listeners
    function attachEventListeners() {
      // Filter events
      elements.searchInput.addEventListener('input', filterAndSortMedia);
      elements.sortSelect.addEventListener('change', filterAndSortMedia);
      elements.dateFrom.addEventListener('change', filterAndSortMedia);
      elements.dateTo.addEventListener('change', filterAndSortMedia);

      // Modal events
      elements.modal.querySelector('.instagram-modal__close')
        .addEventListener('click', modalHandlers.close);
      
      elements.modal.addEventListener('click', (e) => {
        if (e.target === elements.modal) modalHandlers.close();
      });

      // Attach item events
      mediaList.forEach(({ element, data }) => {
        // Modal click
        element.addEventListener('click', () => modalHandlers.open(data));

        // Video hover
        const video = element.querySelector('video');
        if (video) {
          element.addEventListener('mouseenter', () => videoHandlers.play(video));
          element.addEventListener('mouseleave', () => videoHandlers.stop(video, element));
        }
      });
    }

    // Initialize
    attachEventListeners();
  });
</script>

<style>
  .instagram-feed {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }
  .instagram-feed__header {
    text-align: center;
    margin-bottom: 20px;
  }
  .instagram-feed__grid {
    display: grid;
    grid-template-columns: repeat({{ feed_config.columns }}, 1fr);
    width: 100%;
  }
  .instagram-feed__grid--highlight {
    grid-template-columns: 2fr 1fr 1fr;
  }
  .instagram-feed__item {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
    overflow: hidden;
  }
  .instagram-feed__item--highlight {
    grid-column: span 2;
    grid-row: span 2;
  }
  .instagram-feed__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
  }
  .instagram-feed__video-indicator {
    position: absolute;
    top: 12px;
    right: 12px;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 6px 12px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 500;
  }
  .instagram-feed__overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0,0,0,0.7));
    color: white;
    padding: 20px 12px 12px;
    opacity: 0;
    transition: opacity 0.2s;
  }
  .instagram-feed__item:hover .instagram-feed__overlay {
    opacity: 1;
  }
  @media (max-width: 768px) {
    .instagram-feed__grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 5px;
    }
  }
  @media (max-width: 480px) {
    .instagram-feed__grid {
      grid-template-columns: 1fr;
    }
  }
  .instagram-feed__media-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .instagram-feed__poster {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
  }

  .instagram-feed__video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
    background: black;
    border-radius: 8px;
    opacity: 0;
    transition: opacity 0.2s ease-out;
  }

  .instagram-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: rgba(0, 0, 0, 0.6);
    z-index: 1000;
    overflow-y: auto;
    padding: 20px;
  }

  .instagram-modal__content {
    position: relative;
    max-width: 1200px;
    width: 100%;
    margin: 40px auto;
    background: white;
    border-radius: 12px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    max-height: calc(100vh - 80px);
  }

  .instagram-modal__inner {
    display: flex;
    height: 100%;
  }

  .instagram-modal__media {
    flex: 1;
    background: black;
    position: relative;
    min-height: 400px;
    max-height: calc(100vh - 80px);
  }

  .instagram-modal__image,
  .instagram-modal__video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .instagram-modal__info {
    width: 350px;
    padding: 20px;
    border-left: 1px solid #efefef;
    display: flex;
    flex-direction: column;
  }

  .instagram-modal__header {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 15px;
    padding-bottom: 15px;
    border-bottom: 1px solid #efefef;
  }

  .instagram-modal__icon {
    width: 28px;
    height: 28px;
    border-radius: 50%;
  }

  .instagram-modal__caption {
    flex: 1;
    margin: 0 0 15px;
    font-size: 14px;
    line-height: 1.5;
    overflow-y: auto;
  }

  .instagram-modal__stats {
    display: flex;
    gap: 20px;
    font-size: 14px;
    padding-top: 15px;
    border-top: 1px solid #efefef;
  }

  .instagram-modal__close {
    position: fixed;
    top: 20px;
    right: 20px;
    font-size: 32px;
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    z-index: 1001;
  }

  @media (max-width: 768px) {
    .instagram-modal__inner {
      flex-direction: column;
    }
    .instagram-modal__info {
      width: 100%;
      border-left: none;
      border-top: 1px solid #efefef;
    }
  }

  .instagram-feed__filters {
    display: flex;
    gap: 20px;
    margin-bottom: 30px;
    flex-wrap: wrap;
    justify-content: center;
  }

  .instagram-feed__search {
    flex: 1;
    min-width: 200px;
  }

  .instagram-feed__search-input {
    width: 100%;
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 6px;
  }

  .instagram-feed__sort {
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 6px;
    min-width: 150px;
  }

  .instagram-feed__date-filter {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .instagram-feed__date-input {
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 6px;
  }
</style>

{% schema %}
  {
    "name": "Instagram Feed",
    "target": "section",
    "settings": []
  }
{% endschema %}